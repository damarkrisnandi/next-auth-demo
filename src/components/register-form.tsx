"use client";
import type { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useCallback } from "react";
import { useRouter } from "next/navigation";
import { FormProvider, useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import { api } from "@/trpc/react";
import { type ISignUp, signUpSchema } from "@/lib/auth.form";

import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";

import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "./ui/form";
import { toast } from "sonner";

const RegisterForm: NextPage = () => {
  const router = useRouter();
  const form = useForm<ISignUp>({
    resolver: zodResolver(signUpSchema),
    defaultValues: {
      email: '',
      password: '',
      name: '',
    }
  });

  const { control, register, handleSubmit } = form;
  const { mutateAsync } = api.auth.signup.useMutation({
    onSuccess: () => {},
  });

  const onSubmit = useCallback(
    async (data: ISignUp) => {
      const result = await mutateAsync(data);

      if (result.status === 201) {
        toast('Please login first')
        router.push("/login");
      }
    },
    [mutateAsync],
  );

  return (
    <div>
      <Head>
        <title>Next App - Register</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex h-screen w-full items-center justify-center">
        <Card className="bg-white/10 text-white">
          <CardHeader>
            <CardTitle>Create an account!</CardTitle>
            <CardDescription>
              Enter your email below to create an account
            </CardDescription>
          </CardHeader>
          <CardContent>
            <FormProvider {...form}>
            <form
              
              onSubmit={handleSubmit(onSubmit)}
            >
              <div className="card bg-base-100 w-96 shadow-xl">
                <div className="flex flex-col gap-2">
                <FormField
                  control={control}
                  name="name"
                  render={({ field }) => (
                    <FormItem>
                      <FormLabel>Username</FormLabel>
                      <FormControl>
                        <Input {...field} />
                      </FormControl>
                      <FormMessage />
                    </FormItem>
                  )}
                />

                <FormField
                  control={control}
                  name="email"
                  render={({ field }) => (
                    <FormItem>
                      <FormLabel>Email</FormLabel>
                      <FormControl>
                        <Input {...field} />
                      </FormControl>
                      <FormMessage />
                    </FormItem>
                  )}
                />

                <FormField
                  control={control}
                  name="password"
                  render={({ field }) => (
                    <FormItem>
                      <FormLabel>Password</FormLabel>
                      <FormControl>
                        <Input type="password" {...field} />
                      </FormControl>
                      <FormMessage />
                    </FormItem>
                  )}
                />
                  {/* <Input
                    type="text"
                    placeholder="Type your username..."
                    className="input input-bordered my-2 w-full max-w-xs"
                    {...register("username")}
                  />
                  <Input
                    type="email"
                    placeholder="Type your email..."
                    className="input input-bordered w-full max-w-xs"
                    {...register("email")}
                  />
                  <Input
                    type="password"
                    placeholder="Type your password..."
                    className="input input-bordered my-2 w-full max-w-xs"
                    {...register("password")}
                  /> */}
                  <div className="flex flex-col gap-2">
                    <Button type="submit">
                        Sign Up
                    </Button>
                    <div className="mt-4 text-center text-sm">
                      Already have and account?{" "}
                      <a href="/login" className="underline underline-offset-4">
                        Login
                      </a>
                    </div>

                    
                  </div>
                </div>
              </div>
            </form>
            </FormProvider>
          </CardContent>
        </Card>
      </main>
    </div>
  );
};

export default RegisterForm;
